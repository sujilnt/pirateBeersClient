openapi: "3.0.0"
info:
  title: Pirate Beers
  description: A ecommerce app that sells beers
  version: 1.0.0
paths:
  /products/recommendations:
    get:
      tags:
        - products
      summary: Get product recommendations from diffrent users
      description: Get product recommendations from diffrent users
      operationId: getProductRecommendations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/categories/{id}:
     get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: unique id of the  product category
      tags:
        - products
      summary: Get category information of a particular category
      description: Get category information of a particular category
      operationId: getCategoryById
      responses:
        200:
          description: get Category by id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /products/categories:
    get:
      tags:
        - products
      summary: Gets all product categories
      description: Gets all product categories
      operationId: getAllProductCategories
      responses:
        200:
          description: Gets all product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /product:
    post:
      tags:
        - products
      summary: Adding a product to a particular category
      description: Adding a product to a particular category
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Added product succefully
  /products:
    get:
      tags:
        - products
      summary: Gets all products
      description: Gets all products
      operationId: getAllProducts
      responses:
        200:
          description: Gets all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    delete:
      tags:
        - products
      parameters:
        - in: query
          name: ids
          schema:
            type: array
            items:
              type: string
          required: true
      summary: Deleting products based on product Ids
      description: Deleting products based on product Ids
      operationId: deleteProductsByIds
      responses:
        200:
          description: OK
components:
  schemas:
    Product:
      type: object
      description: A model for products
      required:
        - id
        - title
        - description
        - image
        - price
        - rating
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        category:
          type: string
        image:
          type: string
        rating:
          type: number
        abv:
          type: number
        ibu:
          type: number
        price:
          type: number
        listedSince:
          type: string
          format: date-time
        type:
          type: number
        tags:
          type: array
          items:
            type: string
    Range:
      type: object
      description: A model of identify the min and max values
      required:
        - min
        - max
      properties:
        min:
          type: number
        max:
          type: number
    Category:
      type: object
      description: A model of category data data
      required:
        - id
        - title
        - url
        - description
        - image
        - abv
        - ibu
        - srm
        - servingTemperature
        - averagePrice
        - totalBeers
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        image:
          type: string
        abv:
          $ref: "#/components/schemas/Range"
        ibu:
          $ref: "#/components/schemas/Range"
        srm:
          $ref: "#/components/schemas/Range"
        servingTemperature:
          $ref: "#/components/schemas/Range"
        averagePrice:
          type: number
        totalBeers:
          type: number

